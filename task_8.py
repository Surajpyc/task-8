# -*- coding: utf-8 -*-
"""task 8

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s0IJv_yA0YVYmHv1CJ_SHWTDsXkPTp3g
"""





# K-Means Clustering on Mall_Customers Dataset

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA
from sklearn.metrics import silhouette_score

# Step 1: Load and Visualize Dataset
df = pd.read_csv("Mall_Customers.csv")
print(df.head())

# Select numerical features for clustering
data = df[['Annual Income (k$)', 'Spending Score (1-100)']]

# Step 2: Elbow Method to Find Optimal K
inertia = []
K_range = range(1, 11)
for k in K_range:
    kmeans = KMeans(n_clusters=k, random_state=0)
    kmeans.fit(data)
    inertia.append(kmeans.inertia_)

# Plot Elbow Curve
plt.figure(figsize=(8, 4))
plt.plot(K_range, inertia, marker='o')
plt.title('Elbow Method to Find Optimal K')
plt.xlabel('Number of clusters (K)')
plt.ylabel('Inertia')
plt.grid(True)
plt.show()

# Step 3: Fit KMeans with Optimal K
optimal_k = 5  # Choose based on elbow plot
kmeans = KMeans(n_clusters=optimal_k, random_state=0)
clusters = kmeans.fit_predict(data)

# Add cluster labels to the dataset
df['Cluster'] = clusters

# Step 4: Visualize Clusters
plt.figure(figsize=(8, 6))
sns.scatterplot(data=df, x='Annual Income (k$)', y='Spending Score (1-100)', hue='Cluster', palette='Set2')
plt.title('Customer Segments')
plt.show()

# Step 5: Evaluate Clustering using Silhouette Score
score = silhouette_score(data, clusters)
print(f'Silhouette Score for k={optimal_k}: {score:.2f}')





